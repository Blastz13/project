// Generated by view binder compiler. Do not edit!
package com.example.shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderDetailLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView deliveredBody;

  @NonNull
  public final TextView deliveredDetail;

  @NonNull
  public final ImageView deliveredIndicator;

  @NonNull
  public final TextView deliveredTitle;

  @NonNull
  public final View divider12;

  @NonNull
  public final View divider13;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final ImageView imageView8;

  @NonNull
  public final ImageView imageView9;

  @NonNull
  public final TextView orderedBody;

  @NonNull
  public final TextView orderedDetail;

  @NonNull
  public final ImageView orderedIndicator;

  @NonNull
  public final ProgressBar orderedPackageProgressBar;

  @NonNull
  public final TextView orderedTitle;

  @NonNull
  public final TextView packageBody;

  @NonNull
  public final TextView packageDetail;

  @NonNull
  public final ImageView packageIndicator;

  @NonNull
  public final ProgressBar packageShippingProgressBar;

  @NonNull
  public final TextView packageTitle;

  @NonNull
  public final ImageView productImageOrder;

  @NonNull
  public final TextView productPriceOrder;

  @NonNull
  public final TextView productQuantityOrder;

  @NonNull
  public final TextView productTitleOrder;

  @NonNull
  public final ProgressBar progressBar7;

  @NonNull
  public final LinearLayout rateNowContainer;

  @NonNull
  public final TextView shippingBody;

  @NonNull
  public final ConstraintLayout shippingDeliveredProgressBar;

  @NonNull
  public final TextView shippingDetail;

  @NonNull
  public final ImageView shippingIndicator;

  @NonNull
  public final TextView shippingTitle;

  @NonNull
  public final TextView textView36;

  private OrderDetailLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView deliveredBody, @NonNull TextView deliveredDetail,
      @NonNull ImageView deliveredIndicator, @NonNull TextView deliveredTitle,
      @NonNull View divider12, @NonNull View divider13, @NonNull ImageView imageView10,
      @NonNull ImageView imageView6, @NonNull ImageView imageView7, @NonNull ImageView imageView8,
      @NonNull ImageView imageView9, @NonNull TextView orderedBody, @NonNull TextView orderedDetail,
      @NonNull ImageView orderedIndicator, @NonNull ProgressBar orderedPackageProgressBar,
      @NonNull TextView orderedTitle, @NonNull TextView packageBody,
      @NonNull TextView packageDetail, @NonNull ImageView packageIndicator,
      @NonNull ProgressBar packageShippingProgressBar, @NonNull TextView packageTitle,
      @NonNull ImageView productImageOrder, @NonNull TextView productPriceOrder,
      @NonNull TextView productQuantityOrder, @NonNull TextView productTitleOrder,
      @NonNull ProgressBar progressBar7, @NonNull LinearLayout rateNowContainer,
      @NonNull TextView shippingBody, @NonNull ConstraintLayout shippingDeliveredProgressBar,
      @NonNull TextView shippingDetail, @NonNull ImageView shippingIndicator,
      @NonNull TextView shippingTitle, @NonNull TextView textView36) {
    this.rootView = rootView;
    this.deliveredBody = deliveredBody;
    this.deliveredDetail = deliveredDetail;
    this.deliveredIndicator = deliveredIndicator;
    this.deliveredTitle = deliveredTitle;
    this.divider12 = divider12;
    this.divider13 = divider13;
    this.imageView10 = imageView10;
    this.imageView6 = imageView6;
    this.imageView7 = imageView7;
    this.imageView8 = imageView8;
    this.imageView9 = imageView9;
    this.orderedBody = orderedBody;
    this.orderedDetail = orderedDetail;
    this.orderedIndicator = orderedIndicator;
    this.orderedPackageProgressBar = orderedPackageProgressBar;
    this.orderedTitle = orderedTitle;
    this.packageBody = packageBody;
    this.packageDetail = packageDetail;
    this.packageIndicator = packageIndicator;
    this.packageShippingProgressBar = packageShippingProgressBar;
    this.packageTitle = packageTitle;
    this.productImageOrder = productImageOrder;
    this.productPriceOrder = productPriceOrder;
    this.productQuantityOrder = productQuantityOrder;
    this.productTitleOrder = productTitleOrder;
    this.progressBar7 = progressBar7;
    this.rateNowContainer = rateNowContainer;
    this.shippingBody = shippingBody;
    this.shippingDeliveredProgressBar = shippingDeliveredProgressBar;
    this.shippingDetail = shippingDetail;
    this.shippingIndicator = shippingIndicator;
    this.shippingTitle = shippingTitle;
    this.textView36 = textView36;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderDetailLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderDetailLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_detail_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderDetailLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delivered_body;
      TextView deliveredBody = ViewBindings.findChildViewById(rootView, id);
      if (deliveredBody == null) {
        break missingId;
      }

      id = R.id.delivered_detail;
      TextView deliveredDetail = ViewBindings.findChildViewById(rootView, id);
      if (deliveredDetail == null) {
        break missingId;
      }

      id = R.id.delivered_indicator;
      ImageView deliveredIndicator = ViewBindings.findChildViewById(rootView, id);
      if (deliveredIndicator == null) {
        break missingId;
      }

      id = R.id.delivered_title;
      TextView deliveredTitle = ViewBindings.findChildViewById(rootView, id);
      if (deliveredTitle == null) {
        break missingId;
      }

      id = R.id.divider12;
      View divider12 = ViewBindings.findChildViewById(rootView, id);
      if (divider12 == null) {
        break missingId;
      }

      id = R.id.divider13;
      View divider13 = ViewBindings.findChildViewById(rootView, id);
      if (divider13 == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageView imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      id = R.id.imageView9;
      ImageView imageView9 = ViewBindings.findChildViewById(rootView, id);
      if (imageView9 == null) {
        break missingId;
      }

      id = R.id.ordered_body;
      TextView orderedBody = ViewBindings.findChildViewById(rootView, id);
      if (orderedBody == null) {
        break missingId;
      }

      id = R.id.ordered_detail;
      TextView orderedDetail = ViewBindings.findChildViewById(rootView, id);
      if (orderedDetail == null) {
        break missingId;
      }

      id = R.id.ordered_indicator;
      ImageView orderedIndicator = ViewBindings.findChildViewById(rootView, id);
      if (orderedIndicator == null) {
        break missingId;
      }

      id = R.id.ordered_package_progressBar;
      ProgressBar orderedPackageProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (orderedPackageProgressBar == null) {
        break missingId;
      }

      id = R.id.ordered_title;
      TextView orderedTitle = ViewBindings.findChildViewById(rootView, id);
      if (orderedTitle == null) {
        break missingId;
      }

      id = R.id.package_body;
      TextView packageBody = ViewBindings.findChildViewById(rootView, id);
      if (packageBody == null) {
        break missingId;
      }

      id = R.id.package_detail;
      TextView packageDetail = ViewBindings.findChildViewById(rootView, id);
      if (packageDetail == null) {
        break missingId;
      }

      id = R.id.package_indicator;
      ImageView packageIndicator = ViewBindings.findChildViewById(rootView, id);
      if (packageIndicator == null) {
        break missingId;
      }

      id = R.id.package_shipping_progressBar;
      ProgressBar packageShippingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (packageShippingProgressBar == null) {
        break missingId;
      }

      id = R.id.package_title;
      TextView packageTitle = ViewBindings.findChildViewById(rootView, id);
      if (packageTitle == null) {
        break missingId;
      }

      id = R.id.product_image_order;
      ImageView productImageOrder = ViewBindings.findChildViewById(rootView, id);
      if (productImageOrder == null) {
        break missingId;
      }

      id = R.id.product_price_order;
      TextView productPriceOrder = ViewBindings.findChildViewById(rootView, id);
      if (productPriceOrder == null) {
        break missingId;
      }

      id = R.id.product_quantity_order;
      TextView productQuantityOrder = ViewBindings.findChildViewById(rootView, id);
      if (productQuantityOrder == null) {
        break missingId;
      }

      id = R.id.product_title_order;
      TextView productTitleOrder = ViewBindings.findChildViewById(rootView, id);
      if (productTitleOrder == null) {
        break missingId;
      }

      id = R.id.progressBar7;
      ProgressBar progressBar7 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar7 == null) {
        break missingId;
      }

      id = R.id.rate_now_container;
      LinearLayout rateNowContainer = ViewBindings.findChildViewById(rootView, id);
      if (rateNowContainer == null) {
        break missingId;
      }

      id = R.id.shipping_body;
      TextView shippingBody = ViewBindings.findChildViewById(rootView, id);
      if (shippingBody == null) {
        break missingId;
      }

      ConstraintLayout shippingDeliveredProgressBar = (ConstraintLayout) rootView;

      id = R.id.shipping_detail;
      TextView shippingDetail = ViewBindings.findChildViewById(rootView, id);
      if (shippingDetail == null) {
        break missingId;
      }

      id = R.id.shipping_indicator;
      ImageView shippingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (shippingIndicator == null) {
        break missingId;
      }

      id = R.id.shipping_title;
      TextView shippingTitle = ViewBindings.findChildViewById(rootView, id);
      if (shippingTitle == null) {
        break missingId;
      }

      id = R.id.textView36;
      TextView textView36 = ViewBindings.findChildViewById(rootView, id);
      if (textView36 == null) {
        break missingId;
      }

      return new OrderDetailLayoutBinding((ConstraintLayout) rootView, deliveredBody,
          deliveredDetail, deliveredIndicator, deliveredTitle, divider12, divider13, imageView10,
          imageView6, imageView7, imageView8, imageView9, orderedBody, orderedDetail,
          orderedIndicator, orderedPackageProgressBar, orderedTitle, packageBody, packageDetail,
          packageIndicator, packageShippingProgressBar, packageTitle, productImageOrder,
          productPriceOrder, productQuantityOrder, productTitleOrder, progressBar7,
          rateNowContainer, shippingBody, shippingDeliveredProgressBar, shippingDetail,
          shippingIndicator, shippingTitle, textView36);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
