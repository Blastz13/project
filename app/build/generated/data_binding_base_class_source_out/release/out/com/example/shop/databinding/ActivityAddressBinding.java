// Generated by view binder compiler. Do not edit!
package com.example.shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shop.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final EditText cityAddress;

  @NonNull
  public final EditText flatAddress;

  @NonNull
  public final EditText houseAddress;

  @NonNull
  public final EditText indexAddress;

  @NonNull
  public final EditText nameAddress;

  @NonNull
  public final EditText noteAddress;

  @NonNull
  public final EditText phoneAddress;

  @NonNull
  public final Button saveAddressButton;

  @NonNull
  public final EditText streetAddress;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddressBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull EditText cityAddress,
      @NonNull EditText flatAddress, @NonNull EditText houseAddress, @NonNull EditText indexAddress,
      @NonNull EditText nameAddress, @NonNull EditText noteAddress, @NonNull EditText phoneAddress,
      @NonNull Button saveAddressButton, @NonNull EditText streetAddress,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.cityAddress = cityAddress;
    this.flatAddress = flatAddress;
    this.houseAddress = houseAddress;
    this.indexAddress = indexAddress;
    this.nameAddress = nameAddress;
    this.noteAddress = noteAddress;
    this.phoneAddress = phoneAddress;
    this.saveAddressButton = saveAddressButton;
    this.streetAddress = streetAddress;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.city_address;
      EditText cityAddress = ViewBindings.findChildViewById(rootView, id);
      if (cityAddress == null) {
        break missingId;
      }

      id = R.id.flat_address;
      EditText flatAddress = ViewBindings.findChildViewById(rootView, id);
      if (flatAddress == null) {
        break missingId;
      }

      id = R.id.house_address;
      EditText houseAddress = ViewBindings.findChildViewById(rootView, id);
      if (houseAddress == null) {
        break missingId;
      }

      id = R.id.index_address;
      EditText indexAddress = ViewBindings.findChildViewById(rootView, id);
      if (indexAddress == null) {
        break missingId;
      }

      id = R.id.name_address;
      EditText nameAddress = ViewBindings.findChildViewById(rootView, id);
      if (nameAddress == null) {
        break missingId;
      }

      id = R.id.note_address;
      EditText noteAddress = ViewBindings.findChildViewById(rootView, id);
      if (noteAddress == null) {
        break missingId;
      }

      id = R.id.phone_address;
      EditText phoneAddress = ViewBindings.findChildViewById(rootView, id);
      if (phoneAddress == null) {
        break missingId;
      }

      id = R.id.save_address_button;
      Button saveAddressButton = ViewBindings.findChildViewById(rootView, id);
      if (saveAddressButton == null) {
        break missingId;
      }

      id = R.id.street_address;
      EditText streetAddress = ViewBindings.findChildViewById(rootView, id);
      if (streetAddress == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddressBinding((ConstraintLayout) rootView, appBarLayout, cityAddress,
          flatAddress, houseAddress, indexAddress, nameAddress, noteAddress, phoneAddress,
          saveAddressButton, streetAddress, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
