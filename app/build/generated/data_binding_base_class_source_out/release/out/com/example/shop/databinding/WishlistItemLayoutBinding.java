// Generated by view binder compiler. Do not edit!
package com.example.shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WishlistItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView paymentMethodWishlist;

  @NonNull
  public final View priceDividerWishlist;

  @NonNull
  public final TextView productDiscountPriceWishlist;

  @NonNull
  public final ImageView productImageWishlist;

  @NonNull
  public final TextView productPriceWishlist;

  @NonNull
  public final TextView productRatingPreview;

  @NonNull
  public final TextView productTitleWishlist;

  @NonNull
  public final ImageView removeProductWishlist;

  @NonNull
  public final TextView totalRatingWishlist;

  @NonNull
  public final ConstraintLayout totalRatingsWishlist;

  private WishlistItemLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout linearLayout, @NonNull TextView paymentMethodWishlist,
      @NonNull View priceDividerWishlist, @NonNull TextView productDiscountPriceWishlist,
      @NonNull ImageView productImageWishlist, @NonNull TextView productPriceWishlist,
      @NonNull TextView productRatingPreview, @NonNull TextView productTitleWishlist,
      @NonNull ImageView removeProductWishlist, @NonNull TextView totalRatingWishlist,
      @NonNull ConstraintLayout totalRatingsWishlist) {
    this.rootView = rootView;
    this.linearLayout = linearLayout;
    this.paymentMethodWishlist = paymentMethodWishlist;
    this.priceDividerWishlist = priceDividerWishlist;
    this.productDiscountPriceWishlist = productDiscountPriceWishlist;
    this.productImageWishlist = productImageWishlist;
    this.productPriceWishlist = productPriceWishlist;
    this.productRatingPreview = productRatingPreview;
    this.productTitleWishlist = productTitleWishlist;
    this.removeProductWishlist = removeProductWishlist;
    this.totalRatingWishlist = totalRatingWishlist;
    this.totalRatingsWishlist = totalRatingsWishlist;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WishlistItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WishlistItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.wishlist_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WishlistItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.payment_method_wishlist;
      TextView paymentMethodWishlist = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethodWishlist == null) {
        break missingId;
      }

      id = R.id.price_divider_wishlist;
      View priceDividerWishlist = ViewBindings.findChildViewById(rootView, id);
      if (priceDividerWishlist == null) {
        break missingId;
      }

      id = R.id.product_discount_price_wishlist;
      TextView productDiscountPriceWishlist = ViewBindings.findChildViewById(rootView, id);
      if (productDiscountPriceWishlist == null) {
        break missingId;
      }

      id = R.id.product_image_wishlist;
      ImageView productImageWishlist = ViewBindings.findChildViewById(rootView, id);
      if (productImageWishlist == null) {
        break missingId;
      }

      id = R.id.product_price_wishlist;
      TextView productPriceWishlist = ViewBindings.findChildViewById(rootView, id);
      if (productPriceWishlist == null) {
        break missingId;
      }

      id = R.id.product_rating_preview;
      TextView productRatingPreview = ViewBindings.findChildViewById(rootView, id);
      if (productRatingPreview == null) {
        break missingId;
      }

      id = R.id.product_title_wishlist;
      TextView productTitleWishlist = ViewBindings.findChildViewById(rootView, id);
      if (productTitleWishlist == null) {
        break missingId;
      }

      id = R.id.remove_product_wishlist;
      ImageView removeProductWishlist = ViewBindings.findChildViewById(rootView, id);
      if (removeProductWishlist == null) {
        break missingId;
      }

      id = R.id.total_rating_wishlist;
      TextView totalRatingWishlist = ViewBindings.findChildViewById(rootView, id);
      if (totalRatingWishlist == null) {
        break missingId;
      }

      ConstraintLayout totalRatingsWishlist = (ConstraintLayout) rootView;

      return new WishlistItemLayoutBinding((ConstraintLayout) rootView, linearLayout,
          paymentMethodWishlist, priceDividerWishlist, productDiscountPriceWishlist,
          productImageWishlist, productPriceWishlist, productRatingPreview, productTitleWishlist,
          removeProductWishlist, totalRatingWishlist, totalRatingsWishlist);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
